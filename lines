#! /bin/bash
# a tiny code statistical tool
# use for small projects only

exts=( rb py c cc h js )
declare -a ignore
declare -A file_hash

while getopts "i:h" opt
do
    case $opt in
        i)
            ignore+=($OPTARG);;
	h)
	    cat <<EOF

Usage:
 lines
 lines -h
 lines [-i ignore_pattern]

Options:
 -h     print this help
 -i     ignore pattern
EOF
	    exit;;
    esac
done

function match_in() {
    local elem="$1"
    shift
    local striped
    for pattern in "$@"
    do
        striped=${elem/$pattern/}
        # matched
        [[ $elem != $striped ]] && return 0
    done
    return 1
}

filelist=$(find . -type f)
for f in $filelist
do
    match_in $f ${ignore[@]} && continue
    fname=$(basename $f)
    # filter hidden or swap file
    if [[ $fname != *~ && $fname != \.* ]]
    then
        # get file extension
        fext=${fname##*.}
        for ext in ${exts[@]}
        do
            if [ "$ext" = "$fext" ]
            then
                file_hash["$ext"]+="$f\0"
            fi
        done
    fi
done

for key in "${!file_hash[@]}"
do
    # echo $key
    # echo ${file_hash[$key]}
    echo -e -n ${file_hash[$key]} | wc --files0-from=- | sort -n
    echo "------------"
done
